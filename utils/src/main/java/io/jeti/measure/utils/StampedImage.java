// automatically generated by the FlatBuffers compiler, do not modify

package io.jeti.measure.utils;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class StampedImage extends Table {
    public static StampedImage getRootAsStampedImage(ByteBuffer _bb) {
        return getRootAsStampedImage(_bb, new StampedImage());
    }

    public static StampedImage getRootAsStampedImage(ByteBuffer _bb, StampedImage obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public void __init(int _i, ByteBuffer _bb) {
        bb_pos = _i;
        bb = _bb;
    }

    public StampedImage __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public AndroidImage image() {
        return image(new AndroidImage());
    }

    public AndroidImage image(AndroidImage obj) {
        int o = __offset(4);
        return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null;
    }

    public Pose pose() {
        return pose(new Pose());
    }

    public Pose pose(Pose obj) {
        int o = __offset(6);
        return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null;
    }

    public static int createStampedImage(FlatBufferBuilder builder, int imageOffset,
            int poseOffset) {
        builder.startObject(2);
        StampedImage.addPose(builder, poseOffset);
        StampedImage.addImage(builder, imageOffset);
        return StampedImage.endStampedImage(builder);
    }

    public static void startStampedImage(FlatBufferBuilder builder) {
        builder.startObject(2);
    }

    public static void addImage(FlatBufferBuilder builder, int imageOffset) {
        builder.addOffset(0, imageOffset, 0);
    }

    public static void addPose(FlatBufferBuilder builder, int poseOffset) {
        builder.addOffset(1, poseOffset, 0);
    }

    public static int endStampedImage(FlatBufferBuilder builder) {
        int o = builder.endObject();
        builder.required(o, 4); // image
        builder.required(o, 6); // pose
        return o;
    }
}
