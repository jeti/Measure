# automatically generated by the FlatBuffers compiler, do not modify

# namespace: classes

import flatbuffers


class StampedImage(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsStampedImage(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = StampedImage()
        x.Init(buf, n + offset)
        return x

    # StampedImage
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StampedImage
    def Image(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from AndroidImage import AndroidImage
            obj = AndroidImage()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # StampedImage
    def Pose(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Pose import Pose
            obj = Pose()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None


def StampedImageStart(builder): builder.StartObject(2)


def StampedImageAddImage(builder, image): builder.PrependUOffsetTRelativeSlot(0,
                                                                              flatbuffers.number_types.UOffsetTFlags.py_type(
                                                                                  image), 0)


def StampedImageAddPose(builder, pose): builder.PrependUOffsetTRelativeSlot(1,
                                                                            flatbuffers.number_types.UOffsetTFlags.py_type(
                                                                                pose), 0)


def StampedImageEnd(builder): return builder.EndObject()
